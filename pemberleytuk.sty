\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{pemberleytuk}[2020/02/16 stuff needed for TUK layouts]


% ----------------------------------------------------------------------------
% "THE COFFEEWARE LICENSE":
% Adrian Rettich (adrian.rettich@gmail.com) wrote this file. As long as you 
% retain this notice, you can do whatever you want with this stuff. If we 
% should meet in person some day, and you think this stuff is worth it, you 
% are welcome to buy me a coffee in return.  
% ----------------------------------------------------------------------------


\RequirePackage{ifthen}
\RequirePackage{pgfopts}

\def\@passeddept{MA}
\newif\if@grayscale
\newif\if@nopt
\newif\if@reallynopt

\def\@pemberleyunknown{}


\pgfkeys{
	/pemberleytuk/.cd,
	dept/.store in=\@passeddept,
	grayscale/.is if=@grayscale,
    nopt/.is if=@nopt,
    reallynopt/.is if=@reallynopt,
	.unknown/.code={
		\ifthenelse{\equal{\pgfkeyscurrentvalue}{\pgfkeysnovalue}}{
			\edef\@pemberleyunknown{\@pemberleyunknown,\pgfkeyscurrentname}
		}{
			\edef\@pemberleyunknown{\@pemberleyunknown,\pgfkeyscurrentname=\pgfkeyscurrentvalue}
		}
	}
}


\ProcessPgfPackageOptions{/pemberleytuk}
\relax

\PassOptionsToPackage{dvipsnames}{xcolor}
\RequirePackage{xcolor}

\PassOptionsToPackage{\@pemberleyunknown}{pemberley}
\RequirePackage{pemberley}

\RequirePackage{tikz}
\usetikzlibrary{shapes}
\usetikzlibrary{calc}

\if@reallynopt\else
    \RequirePackage{paratype}
    \if@nopt
        \renewcommand{\rmdefault}{cmr}
    \else
        \renewcommand{\rmdefault}{PTSans-TLF}
    \fi
\fi




% COLORS
% the following is the complete set of colors specified by the design handbook.

\definecolor{tukblue}{HTML}{005F8C}
\definecolor{tukred}{HTML}{B92819}
\definecolor{tukwarm}{HTML}{828C96}
\definecolor{tukcold}{HTML}{827D78}
\definecolor{tukblack}{HTML}{000000}

\definecolor{tukArchitektur}{HTML}{000000}
\definecolor{tukBauIng}{HTML}{FF5900}
\definecolor{tukBio}{HTML}{019377}
\definecolor{tukCH}{HTML}{E69202}
\definecolor{tukEIT}{HTML}{4EBCCE}
\definecolor{tukInformatik}{HTML}{470074}
\definecolor{tukMV}{HTML}{00A0C6}
\definecolor{tukMA}{HTML}{FEC000}
\definecolor{tukPH}{HTML}{072B61}
\definecolor{tukRU}{HTML}{FF8C00}
\definecolor{tukSoWi}{HTML}{525759}
\definecolor{tukWiWi}{HTML}{B3000D}

\colorlet{@tuklogobg}{tukblue!10}
\colorlet{@tuklogobgbw}{tukblack!10}
\colorlet{@tukdeptbg}{tukblue}
\colorlet{@tukdeptbgbw}{tukblack}
\colorlet{@tukotherbg}{tukblue!70}
\colorlet{@tukotherbgbw}{tukblack!70}
\colorlet{@tukdarktext}{tukblack}
\colorlet{@tuklighttext}{white}
\colorlet{@tukdarktextbw}{tukblack}
\colorlet{@tuklighttextbw}{white}


\newcommand\switchtograyscale{
	\colorlet{tuklogobg}{@tuklogobgbw}
	\colorlet{tuklighttext}{@tuklighttextbw}
	\colorlet{tukdarktext}{@tukdarktextbw}
	\colorlet{tukdeptbg}{@tukdeptbgbw}
	\colorlet{tukotherbg}{@tukotherbgbw}
	\def\@tuklogopath{tuklogograyscale.pdf}
	}

	\newcommand\switchtocolor{
	\colorlet{tuklogobg}{@tuklogobg}
	\colorlet{tuklighttext}{@tuklighttext}
	\colorlet{tukdarktext}{@tukdarktext}
	\colorlet{tukdeptbg}{@tukdeptbg}
	\colorlet{tukotherbg}{@tukotherbg}
	\def\@tuklogopath{tuklogo.pdf}
		}


% DEPARTMENT NAMES

% use the starred version to make it "department of" in English. 
\NewDocumentCommand\@Fachbereich{s}{%
	\IfBooleanTF#1{%
		\@pemberleylocale{Fachbereich}{department of}%
	}{%
		\@pemberleylocale{Fachbereich}{department}%
	}%
}
\def\@Mathematik{\@pemberleylocale{Mathematik}{mathematics}}
\def\@Architektur{\@pemberleylocale{Architektur}{architecture}}
\def\@Physik{\@pemberleylocale{Physik}{physics}}
\def\@Chemie{\@pemberleylocale{Chemie}{chemistry}}
\def\@Biologie{\@pemberleylocale{Biologie}{biology}}
\def\@Sozialwissenschaften{\@pemberleylocale{Sozialwissenschaften}{social studies}}
\def\@Wirtschaftswissenschaften{\@pemberleylocale{Wirtschaftswissenschaften}{business}}
\def\@Informatik{\@pemberleylocale{Informatik}{computer science}}
\def\@Maschinenbau{\@pemberleylocale{Maschinenbau und Verfahrenstechnik}{what do you call this?}}
\def\@Elektrotechnik{\@pemberleylocale{Elektro- und Informationstechnik}{what do you call this?}}
\def\@Raumplanung{\@pemberleylocale{Raum- und Umweltplanung}{what do you call this?}}
\def\@Bauingenieurswesen{\@pemberleylocale{Bauingenieurswesen}{what do you call this?}}

\def\@Fachschaftsrat{\@pemberleylocale{Fachschaftsrat}{student council}}



% LOGO
% length specifications according to the design handbook
% note: outer height sep onesided is NOT doubled as we usually do not want to pad between page margin and logo

\newlength\tukwidth
\newlength\tukwidthinner
\newlength\tukwidthouter
\newlength\tukheight
\newlength\tukheightinner
\newlength\tukheightouter
\newlength\tukheightouteronesided
\newlength\tukwidthinnersep
\newlength\tukheightinnersep
\newlength\tukwidthoutersep
\newlength\tukheightoutersep

\setlength{\tukwidth}{141pt}
\setlength\tukwidthinnersep{0.2\tukwidth}
\setlength\tukwidthoutersep{0.2\tukwidth}
\setlength{\tukwidthinner}{1\tukwidth}
\addtolength\tukwidthinner{2\tukwidthinnersep}
\setlength{\tukwidthouter}{1\tukwidthinner}
\addtolength\tukwidthouter{2\tukwidthoutersep}

\setlength{\tukheight}{27pt}
\setlength\tukheightinnersep{0.1\tukwidth}
\setlength\tukheightoutersep{0.2\tukwidth}
\setlength{\tukheightinner}{1\tukheight}
\addtolength\tukheightinner{2\tukheightinnersep}
\setlength\tukheightouter{1\tukheightinner}
\setlength\tukheightouteronesided{1\tukheightinner}
\addtolength\tukheightouter{1\tukheightoutersep}
%\addtolength\tukheightouter{1\tukheightoutersep} % SEE BELOW
%\addtolength\tukheightouteronesided{1\tukheightoutersep} % SEE BELOW

% TODO: for some reason, some boxes get significantly bigger height than specified. I have no idea what other padding lengths to set to zero to get this to work. For now, the lengths heightouter and heightouteronesided are each set to 1\tukheightoutersep LESS than they should be, which for unknown reasons yields a box that has exactly the CORRECT height.



% switch to the specified department. I have no idea how to do a switch case, so here are twelve if statements.
% If the specified department is not found, abort compilation.
\newcommand\switchdept[1]{
	\newcounter{deptfail}
	\setcounter{deptfail}{0}

	\ifthenelse{\equal{#1}{MA}}{
		\def\thedept{\@Mathematik}
		\colorlet{tukdept}{tukMA}
		}{\stepcounter{deptfail}}
	\ifthenelse{\equal{#1}{Architektur}}{
		\def\thedept{\@Architektur}
		\colorlet{tukdept}{tukArchitektur}
		}{\stepcounter{deptfail}}
	\ifthenelse{\equal{#1}{Bio}}{
		\def\thedept{\@Biologie}
		\colorlet{tukdept}{tukBio}
		}{\stepcounter{deptfail}}
	\ifthenelse{\equal{#1}{Informatik}}{
		\def\thedept{\@Informatik}
		\colorlet{tukdept}{tukInformatik}
		}{\stepcounter{deptfail}}
	\ifthenelse{\equal{#1}{PH}}{
		\def\thedept{\@Physik}
		\colorlet{tukdept}{tukPH}
		}{\stepcounter{deptfail}}
	\ifthenelse{\equal{#1}{CH}}{
		\def\thedept{\@Chemie}
		\colorlet{tukdept}{tukCH}
		}{\stepcounter{deptfail}}
	\ifthenelse{\equal{#1}{SoWi}}{
		\def\thedept{\@Sozialwissenschaften}
		\colorlet{tukdept}{tukSoWi}
		}{\stepcounter{deptfail}}
	\ifthenelse{\equal{#1}{WiWi}}{
		\def\thedept{\@Wirtschaftswissenschaften}
		\colorlet{tukdept}{tukWiWi}
		}{\stepcounter{deptfail}}
	\ifthenelse{\equal{#1}{MV}}{
		\def\thedept{\@Maschinenbau}
		\colorlet{tukdept}{tukMV}
		}{\stepcounter{deptfail}}
	\ifthenelse{\equal{#1}{EIT}}{
		\def\thedept{\@Elektrotechnik}
		\colorlet{tukdept}{tukEIT}
		}{\stepcounter{deptfail}}
	\ifthenelse{\equal{#1}{RU}}{
		\def\thedept{\@Raumplanung}
		\colorlet{tukdept}{tukRU}
		}{\stepcounter{deptfail}}
	\ifthenelse{\equal{#1}{BauIng}}{
		\def\thedept{\@Bauingenieurswesen}
		\colorlet{tukdept}{tukBauIng}
		}{\stepcounter{deptfail}}

		\ifthenelse{12 = \thedeptfail}
		{\PackageError{pemberleytuk}{the dept you passed is not recognized -- use one of the following: MA, PH, CH, Architektur, Informatik, Bio, BauIng, MV, EIT, SoWi, WiWi, RU}{}}{}


	}

	% \theDept should uppercase \thedept, so we use the hack from pemberley (see there)
	\newcommand\theDept{\thedept[\uppercase]}


	%%%%%%%%%%%%%%%%%%%%%%%%%%
	% TUK BOXES %%%%%%%%%%%%%%
	%%%%%%%%%%%%%%%%%%%%%%%%%%

	% TODO: define what happens in grayscale mode

	% tukboxlineskip: vertical space between the two lines in a tuktextbox.
	\newlength\tukboxlineskip
	\setlength\tukboxlineskip{3pt}

	% tukboxframe: set to a color if you want a frame around tukboxes.
	\def\tukboxframe{none}
	\def\tukboxdebugframe{none}

	% tukboxframewidth: width of the aforementioned frame. Only works if tukboxframe is set.
	\newlength\tukboxframewidth
	\setlength\tukboxframewidth{0pt}
	\newlength\tukboxdebugframewidth
	\setlength\tukboxdebugframewidth{0pt}

    % tukboxprintmargin: extra space to add between page margin and color box; only for overlay boxes
    \newlength\tukboxprintmargin
    \setlength\tukboxprintmargin{0pt}

    \newcommand\tukboxtotalmargin{\dimexpr\tukboxprintmargin+\tukheightouter\relax}

	\newcommand\@tukboxfont{
		\fontsize{13pt}{0pt}\fontfamily{lmss}\selectfont
    }

	% insert two lines of text into a tukbox
	% #1: line 1, #2: line 2, #3: text color
	\newcommand\@tukboxpathtext[3]{
		\path (blinner) rectangle node[inner sep=\tukboxlineskip,rectangle split,rectangle split parts=2,text width=\tukwidth,align=center] () {%
			\color{#3}\@tukboxfont{#1}%
\nodepart{second}%
\color{#3}\@tukboxfont{#2}%
} (trinner);
		}

		% insert one line of text into a tukbox
		% #1: text, #2: text color
	\newcommand\@tukboxpathtextsingle[2]{
		\path (blinner) rectangle node[inner sep=0pt,text width=\tukwidth,align=center] () {%
			\color{#2}\@tukboxfont{#1}%
        } (trinner);
    }


		% insert a picture into a tukbox
		% WARNING: the pic should have size \tukwidth x \tukheight !
		% #1: name of graphics
		\newcommand\@tukboxpathgraphics[1]{
			\def\thepic{\includegraphics[width=\tukwidth,height=\tukheight]{#1}}%
\path (blinner) -- node (pic) {\thepic} (trinner);
}

% this creates a colored box with stuff in it, with the correct INNER seps. The OUTER seps (a surrounding minipage) are added in \@tukbox.
% #1: fill color
% #2: content (e.g. text, graphics)
% #3: placement
% #4: floating (as overlay) (automatically anchors if placement is not "a")
\NewDocumentCommand\@tukboxfloating{mmmo}{
    \def\@tukpic{}
    \IfNoValueTF{#4}{
        \def\@tukpic{}
        \def\@tukpicc{}
    }{
        \def\@tukpic{remember picture}
        \def\@tukpicc{overlay}
    }


    \ifthenelse{\equal{#3}{a}}{
        \def\@tukboxleft{\tukwidthoutersep}
        \def\@tukboxright{\tukwidthoutersep}
        \def\@tukboxtop{\tukheightoutersep}
        \def\@tukboxbottom{\tukheightoutersep}
        \def\@tukboxanchor{0,0}
        \def\@tukboxcenter{($(\@tukboxanchor)+(\@tukboxleft,\@tukboxbottom)+(0.5\tukwidthinner,0.5\tukheightinner)$)}
    }{}
    \ifthenelse{\equal{#3}{t}}{
        \def\@tukboxleft{\tukwidthoutersep}
        \def\@tukboxright{\tukwidthoutersep}
        \def\@tukboxtop{0pt}
        \def\@tukboxbottom{\tukheightoutersep}
        \def\@tukboxanchor{current page.north}
        \def\@tukboxcenter{($(\@tukboxanchor)-(0,\@tukboxtop)-(0,0.5\tukheightinner)-(0,\@tukboxpm)$)}
    }{}
    \ifthenelse{\equal{#3}{b}}{
        \def\@tukboxleft{\tukwidthoutersep}
        \def\@tukboxright{\tukwidthoutersep}
        \def\@tukboxbottom{0pt}
        \def\@tukboxtop{\tukheightoutersep}
        \def\@tukboxanchor{current page.south}
        \def\@tukboxcenter{($(\@tukboxanchor)+(0,\@tukboxbottom)+(0,0.5\tukheightinner)+(0,\@tukboxpm)$)}
    }{}
    \ifthenelse{\equal{#3}{l}}{
        \def\@tukboxleft{0pt}
        \def\@tukboxright{\tukwidthoutersep}
        \def\@tukboxtop{\tukheightoutersep}
        \def\@tukboxbottom{\tukheightoutersep}
        \def\@tukboxanchor{current page.west}
        \def\@tukboxcenter{($(\@tukboxanchor)+(\@tukboxleft,0)+(0.5\tukwidthinner,0)+(\@tukboxpm,0)$)}
    }{}
    \ifthenelse{\equal{#3}{r}}{
        \def\@tukboxright{0pt}
        \def\@tukboxleft{\tukwidthoutersep}
        \def\@tukboxtop{\tukheightoutersep}
        \def\@tukboxbottom{\tukheightoutersep}
        \def\@tukboxanchor{current page.east}
        \def\@tukboxcenter{($(\@tukboxanchor)-(\@tukboxright,0)-(0.5\tukwidthinner,0)-(\@tukboxpm,0)$)}
    }{}

    \IfNoValueTF{#4}{
        \def\@tukboxanchor{0,0}
        \def\@tukboxpm{0pt}
    }{
        \def\@tukboxpm{\tukboxprintmargin}
    }

    \begin{tikzpicture}[\@tukpic,\@tukpicc]
        \node (center) at \@tukboxcenter {};
        \node (blinner) at ($(center.center)-(0.5\tukwidthinner,0.5\tukheightinner)$) {};
        \node (trinner) at ($(center.center)+(0.5\tukwidthinner,0.5\tukheightinner)$) {};
        \node (blouter) at ($(blinner.center)-(\@tukboxleft,\@tukboxbottom)$) {};
        \node (trouter) at ($(trinner.center)+(\@tukboxright,\@tukboxtop)$) {};
        \draw[draw=\tukboxdebugframe,line width=\tukboxdebugframewidth,fill=none] (blouter) rectangle (trouter);
        \draw[draw=\tukboxframe,line width=\tukboxframewidth,fill=#1,rounded corners] (blinner) rectangle (trinner);
        #2
    \end{tikzpicture}%
}


% create a colored box with content embedded in a larger minipage that represents the outer seps specified in the design handbook.
% the first option specifies the placement, as this affects the size of said minipage: if the box is somewhere on the page, it should have spacing on all sides. If it is at the top, spacing above should be omitted, and on the bottom, spacing below.
% TODO: allow placement in corners
% #1: t (top of page), b (bottom of page), l, r, a ("anywhere")
% #2: fill color
% #3: content
% #4: f if floating, leave out otherwise
\newcommand\@tukbox[4]{
    \ifthenelse{\equal{#4}{f}}{
        \@tukboxfloating{#2}{#3}{#1}[f]%
    }{
        \@tukboxfloating{#2}{#3}{#1}%
    }
}


			% #1: placement (a,t,b)
			% #2: fill color
			% #3: graphics file
            % #4: f for floating
	\newcommand\@tukgraphicsbox[4]{
        \@tukbox{#1}{#2}{\@tukboxpathgraphics{#3}}{#4}
		}

		% #1: placement (a,t,b)
		% #2: fill color
		% #3: text color
		% #4: text line 1
		% #5: text line 2
        % #6: f for floating
	\NewDocumentCommand\@tuktextbox{mmmmom}{
		\IfNoValueTF{#5}{\def\@pathtext{\@tukboxpathtextsingle{#4}{#3}}}{\def\@pathtext{\@tukboxpathtext{#4}{#5}{#3}}}
        \@tukbox{#1}{#2}{\@pathtext}{#6}
		}

		% this is the preferred way to create a tukbox.
		% For a box with text:
		% \tukbox{placement}{fillcolor}[textcolor]{text}[optionally more text]
		% For a box with picture:
		% \tukbox{placement}{fillcolor}{graphicsfile}
        % use with a star for a floating (overlay) box
		\NewDocumentCommand\tukbox{smmomo}{
            \IfBooleanTF#1{
                \def\@fl{f}
            }{
                \def\@fl{}
			}
            \IfNoValueTF{#4}{
                \@tukgraphicsbox{#2}{#3}{#5}{\@fl}
            }{
                \@tuktextbox{#2}{#3}{#4}{#5}[#6]{\@fl}
            }
        }

            \NewDocumentCommand\tukdeptbox{s}{
            \IfBooleanTF#1{
                \tukbox*{t}{tukdeptbg}[white]{\@Fachbereich*[\uppercase]}[\theDept]
            }{
                \tukbox{t}{tukdeptbg}[white]{\@Fachbereich*[\uppercase]}[\theDept]
			}
				}

				\NewDocumentCommand\tukheaderbox{smo}{
            \IfBooleanTF#1{
                    \tukbox*{t}{tukotherbg}[white]{#2}[#3]
            }{
                    \tukbox{t}{tukotherbg}[white]{#2}[#3]
			}
					}

					% #1: placement
                    \NewDocumentCommand\tuklogobox{sm}{
            \IfBooleanTF#1{
						\tukbox*{#2}{tuklogobg}{\@tuklogopath}
            }{
						\tukbox{#2}{tuklogobg}{\@tuklogopath}
			}
						}




\AtBeginDocument{
\switchdept{\@passeddept}
\switchtocolor
\if@grayscale
	\switchtograyscale
\fi
}
